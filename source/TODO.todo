Team Members: Please indicated you have completed a task by placing a smiley face to the right of the item 

Next Meeting: Thursday at 7pm, Duffield

Joey: 
1)

Andrew: 
1)

Will:
1) 


(*
let minimax (board : board) (depth : int) : move =
	let rec mini_max board depth = 
		let possible_moves = get_possible_moves board in
		match (depth, possible_moves) with
			| (0, _ ) 
			| (_, []) -> evaluate board
			| _ -> List.fold_left max (List.map (fun f x -> mini_min (do_move board x) (depth -1)) possible_moves)
	and mini_min board_depth = 
		let possible_moves = get_possible_moves board in
		match (depth, possible_moves) with
			| (0, _ ) 
			| (_, []) -> evaluate board
			| _ -> List.fold_left min (List.map (fun f x -> mini_min (do_move board x) (depth -1)) possible_moves)
	 in mini_max board MAX_SEARCH_DEPTH;;

	*)
